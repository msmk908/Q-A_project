<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.codeqna.entity.createUserTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-05-17T05:54:24" hostname="CODEHOWS" time="0.825">
  <properties/>
  <testcase name="일반 회원가입 테스트" classname="com.codeqna.entity.createUserTest" time="0.825"/>
  <system-out><![CDATA[14:54:18.986 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.codeqna.entity.createUserTest]: createUserTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:54:19.125 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.codeqna.CodeQnAApplication for test class com.codeqna.entity.createUserTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2024-05-17T14:54:19.532+09:00  INFO 15028 --- [CodeQnA] [    Test worker] com.codeqna.entity.createUserTest        : Starting createUserTest using Java 17.0.9 with PID 15028 (started by CodePC in C:\CodeQnA\CodeQnA)
2024-05-17T14:54:19.535+09:00  INFO 15028 --- [CodeQnA] [    Test worker] com.codeqna.entity.createUserTest        : No active profile set, falling back to 1 default profile: "default"
2024-05-17T14:54:20.384+09:00  INFO 15028 --- [CodeQnA] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-05-17T14:54:20.386+09:00  INFO 15028 --- [CodeQnA] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2024-05-17T14:54:20.423+09:00  INFO 15028 --- [CodeQnA] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.codeqna.repository.BoardRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-05-17T14:54:20.424+09:00  INFO 15028 --- [CodeQnA] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.codeqna.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-05-17T14:54:20.425+09:00  INFO 15028 --- [CodeQnA] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33 ms. Found 0 JDBC repository interfaces.
2024-05-17T14:54:20.438+09:00  INFO 15028 --- [CodeQnA] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-05-17T14:54:20.439+09:00  INFO 15028 --- [CodeQnA] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-17T14:54:20.474+09:00  INFO 15028 --- [CodeQnA] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31 ms. Found 2 JPA repository interfaces.
2024-05-17T14:54:21.048+09:00  INFO 15028 --- [CodeQnA] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-17T14:54:21.125+09:00  INFO 15028 --- [CodeQnA] [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-05-17T14:54:21.171+09:00  INFO 15028 --- [CodeQnA] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-17T14:54:21.484+09:00  INFO 15028 --- [CodeQnA] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-17T14:54:21.516+09:00  INFO 15028 --- [CodeQnA] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-05-17T14:54:21.707+09:00  INFO 15028 --- [CodeQnA] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=SA
2024-05-17T14:54:21.709+09:00  INFO 15028 --- [CodeQnA] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-05-17T14:54:21.740+09:00  WARN 15028 --- [CodeQnA] [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-05-17T14:54:22.884+09:00  INFO 15028 --- [CodeQnA] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists board cascade 
Hibernate: 
    drop table if exists fileconfig cascade 
Hibernate: 
    drop table if exists heart cascade 
Hibernate: 
    drop table if exists logs cascade 
Hibernate: 
    drop table if exists reply cascade 
Hibernate: 
    drop table if exists uploadfile cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists visitor cascade 
Hibernate: 
    drop sequence if exists users_seq
Hibernate: 
    create sequence users_seq start with 1 increment by 50
Hibernate: 
    create table board (
        bno bigint generated by default as identity,
        heart bigint,
        hitcount bigint,
        regdate timestamp(6),
        board_condition varchar(255) not null,
        hashtag varchar(255),
        nickname varchar(255) not null,
        title varchar(255) not null,
        content TEXT not null,
        primary key (bno)
    )
Hibernate: 
    create table fileconfig (
        max_file_num integer not null,
        max_file_size integer,
        file_ext varchar(255),
        primary key (max_file_num)
    )
Hibernate: 
    create table heart (
        bno bigint not null,
        hno bigint generated by default as identity,
        nickname bigint not null,
        primary key (hno)
    )
Hibernate: 
    create table logs (
        bno bigint not null unique,
        delete_time timestamp(6),
        id bigint generated by default as identity,
        recover_time timestamp(6),
        primary key (id)
    )
Hibernate: 
    create table reply (
        bno bigint not null,
        parent_id bigint,
        regdate timestamp(6),
        rno bigint generated by default as identity,
        content varchar(255) not null,
        nickname varchar(255) not null,
        reply_condition varchar(255) not null,
        primary key (rno)
    )
Hibernate: 
    create table uploadfile (
        bno bigint not null,
        fno bigint generated by default as identity,
        original_file_name varchar(255) not null,
        saved_file_name varchar(255) not null,
        primary key (fno)
    )
Hibernate: 
    create table users (
        id bigint not null,
        regdate timestamp(6),
        email varchar(255) not null unique,
        kakao VARCHAR(5) DEFAULT 'N',
        nickname varchar(255) not null unique,
        password varchar(255) not null,
        user_condition VARCHAR(5) DEFAULT 'Y',
        user_role varchar(255) check (user_role in ('USER','ADMIN')),
        primary key (id)
    )
Hibernate: 
    create table visitor (
        visitors bigint not null,
        primary key (visitors)
    )
Hibernate: 
    alter table if exists heart 
       add constraint FK5hhyixkm1ygbw1wq4f77lv7ls 
       foreign key (bno) 
       references board
Hibernate: 
    alter table if exists logs 
       add constraint FKrgvoy8r47u2lqmiy30ukmeq0y 
       foreign key (bno) 
       references board
Hibernate: 
    alter table if exists reply 
       add constraint FKqlmiim8ehaaduetw72j0d1oj6 
       foreign key (bno) 
       references board
Hibernate: 
    alter table if exists uploadfile 
       add constraint FKs33im3x0e5yflowik3as1a9ca 
       foreign key (bno) 
       references board
2024-05-17T14:54:22.957+09:00  INFO 15028 --- [CodeQnA] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-17T14:54:23.470+09:00  WARN 15028 --- [CodeQnA] [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-17T14:54:23.856+09:00  INFO 15028 --- [CodeQnA] [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@68a1bb31, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@344f4a82, org.springframework.security.web.context.SecurityContextHolderFilter@19565b5, org.springframework.security.web.header.HeaderWriterFilter@56afbace, org.springframework.web.filter.CorsFilter@1ecbb787, org.springframework.security.web.csrf.CsrfFilter@672549f3, org.springframework.security.web.authentication.logout.LogoutFilter@27563444, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@368e7d3a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@407ff25f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ba8fbc8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6441cff1, org.springframework.security.web.access.ExceptionTranslationFilter@5bd191c2, org.springframework.security.web.access.intercept.AuthorizationFilter@700596f9]
2024-05-17T14:54:23.863+09:00  WARN 15028 --- [CodeQnA] [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@34ac72c3. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-05-17T14:54:23.864+09:00  INFO 15028 --- [CodeQnA] [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@34ac72c3
2024-05-17T14:54:24.346+09:00  INFO 15028 --- [CodeQnA] [    Test worker] com.codeqna.entity.createUserTest        : Started createUserTest in 5.053 seconds (process running for 6.345)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.kakao,
        u1_0.nickname,
        u1_0.password,
        u1_0.regdate,
        u1_0.user_condition,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.nickname=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.kakao,
        u1_0.nickname,
        u1_0.password,
        u1_0.regdate,
        u1_0.user_condition,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
Hibernate: 
    select
        next value for users_seq
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
